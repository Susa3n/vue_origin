{"version":3,"file":"vue.js","sources":["../src/utils.js","../src/Observer/Array.js","../src/Observer/index.js","../src/state.js","../src/init.js","../src/index.js"],"sourcesContent":["export function isFunction(value) {\r\n  return typeof value === 'function'\r\n}\r\nexport function isObject(value) {\r\n  return typeof value === 'object' && value != null\r\n}","let oldMethods = Array.prototype\r\nexport let arrayMethods = Object.create(oldMethods) // 旧数组的原型方法\r\nlet methods = [\r\n  'push',\r\n  'shift',\r\n  'unshift',\r\n  'splice',\r\n  'pop',\r\n  'sort',\r\n  'reverse'\r\n]\r\n\r\nmethods.forEach(method => {\r\n  arrayMethods[method] = function (...args) { // args 是参数列表\r\n  // 这里的this指的是谁调的   比如data: {a:[1,2,3]}  vm.a.push(4) 此时[1,2,3]就为当前的this\r\n    oldMethods[method].call(this, ...args) // 执行旧数组上的方法\r\n    let inserted;\r\n    let ob = this.__ob__ // 在对数组外层观测时 将当前实例挂载的this挂载到__ob__属性\r\n    switch (method) { // 判断如果是push  shift splice 方法  对于新增的属性进行数据劫持 args为新增的数据\r\n      case 'push':\r\n      case 'shift':\r\n        inserted = args \r\n        break;\r\n      case 'splice': // splice的第二个参数以后都为新增的数据\r\n        inserted = args.slice(2)\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n    if (inserted) ob.observerArray(inserted) // 通过observerArray递归进行数据劫持\r\n  }\r\n})","\r\nimport { isObject } from \"../utils\";\r\nimport {arrayMethods} from './Array'\r\n\r\n// 如果数据是对象 会对对象递归 进行数据劫持\r\n// 如果是数组 会劫持数组的方法 并对数组上不是基本数据类型的数据进行数据劫持\r\n\r\nclass Observer {\r\n  constructor(data) { \r\n    // 给要劫持的数据上添加__ob__属性，指定为当前this（两个作用）\r\n      // 一： observe劫持数据时可以通过是否有__ob__属性来判断是否已经劫持过 劫持过直接return\r\n      // 二：调用数组的方法（push、shift、splice...）对于新增的数据，可以通过this.__ob__.observerArray递归劫持\r\n    // data.__ob__ = this   如果直接放到data的属性上，当walk(data)时会遍历__ob__上的属性，导致递归爆栈\r\n    // 解决方法： 通过 Object.defineProperty 设置不可枚举\r\n    Object.defineProperty(data,'__ob__',{\r\n      value: this,\r\n      enumerable: false // 不可枚举\r\n    })\r\n    if(Array.isArray(data)){ // 处理数组格式\r\n      // 对数组劫持的逻辑\r\n      data.__proto__ = arrayMethods  // 对数组原来的方法进行重改\r\n      this.observerArray(data) // 对数据中的数据 进行递归劫持\r\n    }else { //处理对象格式\r\n      this.walk(data) // 对对象中所有的属性进行数据劫持\r\n    }\r\n  }\r\n  observerArray(data){\r\n    for(let i = 0; i<data.length; i++) { // 遍历数组中的每一项 劫持数据\r\n      observe(data[i])\r\n    }\r\n  }\r\n\r\n  walk(data) {\r\n    Object.keys(data).forEach(key => { // 遍历data拿到所有的key\r\n      defineReactive(data, key, data[key])\r\n    })\r\n  }\r\n\r\n\r\n}\r\n\r\nfunction defineReactive(data,key,value) { // 将数据定义为响应式\r\n  observe(value) // value可能还是对象  递归进行劫持\r\n  Object.defineProperty(data,key,{\r\n    get() {\r\n      return value\r\n    },\r\n    set(newValue) {\r\n      // 如果set的newValue是一个对象 也要对对象进行劫持\r\n      observe(newValue)\r\n      value = newValue\r\n    }\r\n  })\r\n}\r\n\r\n\r\nexport function observe(data) { // 观测数据\r\n  // 判断用户返回的data是否是对象 如果不是直接返回\r\n  if (!isObject(data)) {\r\n    return\r\n  }\r\n\r\n  if(data.__ob__){\r\n    return\r\n  }\r\n\r\n  // data最外层默认是对象\r\n  return new Observer(data) // 返回一个实例\r\n}\r\n\r\n\r\n/**\r\n * data(){\r\n *  return {\r\n *      person: [{name:'susa3n'}]\r\n *    }\r\n * }\r\n * 完整的初始化流程：\r\n *  observe最开始观测data时，最外层是对象形式，遍历所有的key，进行数据劫持，\r\n * 将当前实例挂载到数组上__ob__ = this，当发现第二层值为数组时，调用observerArray方法，传入当前值，遍历数组进行递归劫持。\r\n * vm.person.push({name:'lisi'}) 执行旧数组原型上的方法 对新增的数据 通过__ob__.observerArray(args)\r\n * \r\n */","import { isFunction } from \"./utils\" // 引入工具函数判断当前值是否是函数类型\r\nimport { observe } from \"./Observer/index\"\r\nexport function initState(vm) {\r\n  const opts = vm.$options \r\n  if(opts.data) { // 如果选项中有data\r\n    initData(vm) // 对data进行初始化\r\n  }\r\n  // if(opts.computed){\r\n  //   initComputed()\r\n\r\n  // }\r\n  // if(opts.watch){\r\n  //   initWatch()\r\n  // }\r\n}\r\n\r\nfunction initData(vm) { // 初始化data方法\r\n  let data = vm.$options.data // vm中$符号开头的属性不会被代理\r\n  // vue2中会将所有层次的数据进行数据劫持 通过Object.defineProperty\r\n\r\n  // call的原因 data中所有数据的this都指向当前实例 vm\r\n  data = vm._data = isFunction(data) ? data.call(vm) : data \r\n  for (const key in data) { // 通过proxy代理将data上的数据定义vm上，当读取属性时还是走的observe\r\n    proxy(vm,'_data',key)\r\n  }\r\n\r\n  // 观测数据 将数据变为响应式的\r\n  observe(data)\r\n}\r\n\r\nfunction proxy(vm,source,key) {\r\n  Object.defineProperty(vm,key,{\r\n    get() {\r\n      return vm[source][key]\r\n    },\r\n    set(newValue) {\r\n      vm[source][key] = newValue\r\n    }\r\n  })\r\n}","import { initState } from \"./state\"\r\nexport function initMixin(Vue) {\r\n  Vue.prototype._init = function(options) {\r\n    const vm = this // 缓存this 保存到当前作用域\r\n    vm.$options = options  // 将选项保存到实例的$options\r\n\r\n    // 对数据进行初始化 比如 data  computed watch ...\r\n    initState(vm)\r\n  }\r\n}\r\n","import {initMixin} from './init'\r\nfunction Vue (options) { \r\n  // options 用户传入的选项\r\n  this._init(options) // 根据选项进行初始化\r\n}\r\n\r\ninitMixin(Vue) // 给Vue的原型添加_init的方法，传入Vue\r\n\r\nexport default Vue"],"names":["isFunction","value","isObject","oldMethods","Array","prototype","arrayMethods","Object","create","methods","forEach","method","args","call","inserted","ob","__ob__","slice","observerArray","Observer","data","defineProperty","enumerable","isArray","__proto__","walk","i","length","observe","keys","key","defineReactive","get","set","newValue","initState","vm","opts","$options","initData","_data","proxy","source","initMixin","Vue","_init","options"],"mappings":"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"}